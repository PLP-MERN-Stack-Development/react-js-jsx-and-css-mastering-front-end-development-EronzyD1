import { useEffect, useMemo, useState } from 'react';
import Card from '../components/Card.jsx';
import Button from '../components/Button.jsx';
export default function Posts(){ const [q,setQ]=useState(''); const [page,setPage]=useState(1); const [pending,setPending]=useState(false); const [error,setError]=useState(''); const [posts,setPosts]=useState([]); const pageSize=10; useEffect(()=>{ let active=true; (async()=>{ try{ setPending(true); setError(''); const r=await fetch('https://jsonplaceholder.typicode.com/posts'); if(!r.ok) throw new Error('Failed to fetch posts'); const data=await r.json(); if(active) setPosts(data);}catch(e){ if(active) setError(e.message||'Error'); } finally{ if(active) setPending(false);} })(); return ()=>{ active=false; }; },[]); const filtered = (q||'').trim()? posts.filter(p=> p.title.toLowerCase().includes((q||'').trim().toLowerCase()) || p.body.toLowerCase().includes((q||'').trim().toLowerCase())): posts; const totalPages = Math.max(1, Math.ceil(filtered.length / pageSize)); const current = filtered.slice((page-1)*pageSize, page*pageSize); if(page>totalPages) setPage(1); return (<section className='space-y-6'><h1 className='text-2xl font-bold'>JSONPlaceholder Posts</h1><div className='flex gap-2'><input value={q} onChange={e=>setQ(e.target.value)} className='w-full rounded-lg border px-3 py-2 dark:bg-gray-800' placeholder='Search posts...' /><Button variant='secondary' onClick={()=>setQ('')}>Clear</Button></div>{pending && <p>Loadingâ€¦</p>}{error && <p className='text-red-600'>{error}</p>}<div className='grid gap-4 sm:grid-cols-2 lg:grid-cols-3'>{current.map(p => (<Card key={p.id}><h3 className='font-semibold mb-1'>{p.title}</h3><p className='opacity-80 text-sm'>{p.body}</p></Card>))}</div><div className='flex items-center gap-2'><Button variant='secondary' onClick={()=>setPage(p=>Math.max(1,p-1))}>Prev</Button><span className='text-sm opacity-80'>Page {page} / {totalPages}</span><Button variant='secondary' onClick={()=>setPage(p=>Math.min(totalPages,p+1))}>Next</Button></div></section>); }
